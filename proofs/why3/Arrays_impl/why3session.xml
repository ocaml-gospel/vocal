<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.5" timelimit="60" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="Arrays_impl.mlw"/>
<theory name="Impl" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_search&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="22"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="106"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="130"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="68"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="44"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="40"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.13" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="313"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.14" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="34"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="44"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.19" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="215"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_search_left&#39;vc" expl="VC for binary_search_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_search_left&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="22"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="106"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="130"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="68"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="34"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="44"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="42"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.98" steps="1011"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="298"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsafe_binary_search_right&#39;vc" expl="VC for unsafe_binary_search_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unsafe_binary_search_right&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="22"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="106"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="130"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="68"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="30"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="34"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="34"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="44"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="42"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.82" steps="738"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="303"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_search_right&#39;vc" expl="VC for binary_search_right" proved="true">
 <proof prover="0"><result status="valid" time="0.06" steps="79"/></proof>
 </goal>
 <goal name="permut_rot&#39;vc" expl="VC for permut_rot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_rot&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="62"/></proof>
  </goal>
  <goal name="permut_rot&#39;vc.1" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="permut_rot&#39;vc.1.0" expl="loop invariant preservation" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="2.02" steps="303476"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut_rot&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.33" steps="450"/></proof>
  </goal>
  <goal name="permut_rot&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="permut_rot&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="117"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_sort&#39;vc" expl="VC for binary_sort" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="binary_sort&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="20"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="26"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="132"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="400"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="39"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="53"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="53"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="59"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="59"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="64"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="63"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="77"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="447"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="287"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.17" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="binary_sort&#39;vc.17.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="((elts a1)[i + 1] = (elts a2)[i])">
    <goal name="binary_sort&#39;vc.17.0.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.13" steps="60"/></proof>
    </goal>
    <goal name="binary_sort&#39;vc.17.0.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.10" steps="318"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="binary_sort&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="672"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="binary_sort&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <transf name="case" proved="true" arg1="(j = k)">
    <goal name="binary_sort&#39;vc.19.0.0" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="5" timelimit="50"><result status="valid" time="5.87" steps="764748"/></proof>
    </goal>
    <goal name="binary_sort&#39;vc.19.0.1" expl="false case (loop invariant preservation)" proved="true">
    <transf name="case" proved="true" arg1="(j &lt; mid)">
     <goal name="binary_sort&#39;vc.19.0.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
     <proof prover="0" timelimit="1"><result status="valid" time="0.23" steps="454"/></proof>
     </goal>
     <goal name="binary_sort&#39;vc.19.0.1.1" expl="false case (loop invariant preservation)" proved="true">
     <transf name="case" proved="true" arg1="(j = mid)">
      <goal name="binary_sort&#39;vc.19.0.1.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
      <proof prover="0"><result status="valid" time="0.21" steps="585"/></proof>
      </goal>
      <goal name="binary_sort&#39;vc.19.0.1.1.1" expl="false case (loop invariant preservation)" proved="true">
      <transf name="case" proved="true" arg1="(i &lt; mid)">
       <goal name="binary_sort&#39;vc.19.0.1.1.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
       <proof prover="0"><result status="valid" time="1.87" steps="7858"/></proof>
       </goal>
       <goal name="binary_sort&#39;vc.19.0.1.1.1.1" expl="false case (loop invariant preservation)" proved="true">
       <transf name="case" proved="true" arg1="(i = mid)">
        <goal name="binary_sort&#39;vc.19.0.1.1.1.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
        <proof prover="0" timelimit="1"><result status="valid" time="0.20" steps="572"/></proof>
        </goal>
        <goal name="binary_sort&#39;vc.19.0.1.1.1.1.1" expl="false case (loop invariant preservation)" proved="true">
        <proof prover="0"><result status="valid" time="2.20" steps="7343"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="binary_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="14.87" steps="2207768"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="39"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="31"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.23" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="103"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="118"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="swap&#39;vc" expl="VC for swap" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.06" steps="83"/></proof>
 </goal>
 <goal name="knuth_shuffle&#39;vc" expl="VC for knuth_shuffle" proved="true">
 <proof prover="0"><result status="valid" time="0.35" steps="1450"/></proof>
 </goal>
</theory>
<theory name="Correct" proved="true">
 <goal name="Sig.binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.05" steps="103"/></proof>
 </goal>
 <goal name="Sig.binary_search_left&#39;vc" expl="VC for binary_search_left" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.06" steps="103"/></proof>
 </goal>
 <goal name="Sig.unsafe_binary_search_right&#39;vc" expl="VC for unsafe_binary_search_right" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.06" steps="103"/></proof>
 </goal>
 <goal name="Sig.binary_search_right&#39;vc" expl="VC for binary_search_right" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.06" steps="77"/></proof>
 </goal>
 <goal name="Sig.binary_sort&#39;vc" expl="VC for binary_sort" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="20"/></proof>
 </goal>
 <goal name="Sig.swap&#39;vc" expl="VC for swap" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.08" steps="199"/></proof>
 </goal>
 <goal name="Sig.knuth_shuffle&#39;vc" expl="VC for knuth_shuffle" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="10"/></proof>
 </goal>
</theory>
</file>
</why3session>

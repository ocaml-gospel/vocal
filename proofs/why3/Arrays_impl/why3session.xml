<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="Arrays_impl.mlw"/>
<theory name="Impl" proved="true">
 <goal name="binary_search&#39;vc" expl="VC for binary_search" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_search&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="252"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="284"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="116"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="128"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="158"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.13" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="959"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.14" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="142"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.19" expl="exceptional postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="882"/></proof>
  </goal>
  <goal name="binary_search&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_search_left&#39;vc" expl="VC for binary_search_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="binary_search_left&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="18"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="252"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="284"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="116"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="128"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="158"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="141"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="5641"/></proof>
  </goal>
  <goal name="binary_search_left&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="835"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="unsafe_binary_search_right&#39;vc" expl="VC for unsafe_binary_search_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unsafe_binary_search_right&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="252"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="284"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.4" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="116"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="128"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="158"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.11" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="141"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="2.10" steps="13029"/></proof>
  </goal>
  <goal name="unsafe_binary_search_right&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="875"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_search_right&#39;vc" expl="VC for binary_search_right" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="87"/></proof>
 </goal>
 <goal name="permut_rot&#39;vc" expl="VC for permut_rot" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="permut_rot&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="98"/></proof>
  </goal>
  <goal name="permut_rot&#39;vc.1" expl="loop invariant preservation" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="permut_rot&#39;vc.1.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="2.95" steps="25377"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="permut_rot&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="2227"/></proof>
  </goal>
  <goal name="permut_rot&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="permut_rot&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="241"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="binary_sort&#39;vc" expl="VC for binary_sort" proved="true">
 <transf name="split_all_full" proved="true" >
  <goal name="binary_sort&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="38"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="198"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="649"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="101"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="154"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="55"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.13" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="59"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="614"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="398"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="981"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="2137"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="binary_sort&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <transf name="case" proved="true" arg1="(j = k)">
    <goal name="binary_sort&#39;vc.19.0.0" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="0"><result status="valid" time="1.00" steps="201729"/></proof>
    </goal>
    <goal name="binary_sort&#39;vc.19.0.1" expl="false case (loop invariant preservation)" proved="true">
    <transf name="case" proved="true" arg1="(j &lt; mid)">
     <goal name="binary_sort&#39;vc.19.0.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
     <proof prover="1"><result status="valid" time="0.16" steps="1032"/></proof>
     </goal>
     <goal name="binary_sort&#39;vc.19.0.1.1" expl="false case (loop invariant preservation)" proved="true">
     <transf name="case" proved="true" arg1="(j = mid)">
      <goal name="binary_sort&#39;vc.19.0.1.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
      <proof prover="1"><result status="valid" time="1.00" steps="10993"/></proof>
      </goal>
      <goal name="binary_sort&#39;vc.19.0.1.1.1" expl="false case (loop invariant preservation)" proved="true">
      <transf name="case" proved="true" arg1="(i &lt; mid)">
       <goal name="binary_sort&#39;vc.19.0.1.1.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
       <proof prover="1"><result status="valid" time="2.91" steps="22926"/></proof>
       </goal>
       <goal name="binary_sort&#39;vc.19.0.1.1.1.1" expl="false case (loop invariant preservation)" proved="true">
       <transf name="case" proved="true" arg1="(i = mid)">
        <goal name="binary_sort&#39;vc.19.0.1.1.1.1.0" expl="false case (true case. loop invariant preservation)" proved="true">
        <proof prover="1"><result status="valid" time="0.20" steps="1243"/></proof>
        </goal>
        <goal name="binary_sort&#39;vc.19.0.1.1.1.1.1" expl="false case (loop invariant preservation)" proved="true">
        <proof prover="1"><result status="valid" time="3.12" steps="27721"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="binary_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="binary_sort&#39;vc.20.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" memlimit="2000"><result status="valid" time="4.24" steps="1092151"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="binary_sort&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="75"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.23" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="189"/></proof>
  </goal>
  <goal name="binary_sort&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="291"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="swap&#39;vc" expl="VC for swap" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="108"/></proof>
 </goal>
 <goal name="knuth_shuffle&#39;vc" expl="VC for knuth_shuffle" proved="true">
 <proof prover="1"><result status="valid" time="0.23" steps="2570"/></proof>
 </goal>
</theory>
<theory name="Correct" proved="true">
 <goal name="Sig.binary_search&#39;refn&#39;vc" expl="VC for binary_search&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.07" steps="511"/></proof>
 </goal>
 <goal name="Sig.binary_search_left&#39;refn&#39;vc" expl="VC for binary_search_left&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.10" steps="716"/></proof>
 </goal>
 <goal name="Sig.unsafe_binary_search_right&#39;refn&#39;vc" expl="VC for unsafe_binary_search_right&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.07" steps="510"/></proof>
 </goal>
 <goal name="Sig.binary_search_right&#39;refn&#39;vc" expl="VC for binary_search_right&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.07" steps="531"/></proof>
 </goal>
 <goal name="Sig.binary_sort&#39;refn&#39;vc" expl="VC for binary_sort&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="124"/></proof>
 </goal>
 <goal name="Sig.swap&#39;refn&#39;vc" expl="VC for swap&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="209"/></proof>
 </goal>
</theory>
</file>
</why3session>
